# doctest
# for: 7-base_geometry
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(None)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("aot", None)
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", float('inf'))
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", -7)
Traceback (most recent call last):
...
ValueError: aot must be greater than 0
>>> bg.integer_validator("aot", 0)
Traceback (most recent call last):
...
ValueError: aot must be greater than 0
>>> bg.integer_validator("aot", "char")
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", 7)
>>> bg.integer_validator("aot", [7, 0])
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("aot", float('NaN'))
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
>>> bg.integer_validator("aot", (7,))
Traceback (most recent call last):
 ...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", [3])
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", [3])
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", {7, 9})
Traceback (most recent call last):
...
TypeError: aot must be an integer
>>> bg.integer_validator("aot", True)
Traceback (most recent call last):
...
TypeError: aot must be an integer
