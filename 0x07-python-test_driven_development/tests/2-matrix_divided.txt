# doctest for file-2
# function `matrix_divided(matrix, div):` divides matrix
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided([[1, 2], [3, 4], [5, 6]], 2)
[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]
>>> matrix_divided([[1.0, 2.0], [3.0, 4.0]], 2.0)
[[0.5, 1.0], [1.5, 2.0]]
>>> matrix_divided([[1, 2], [3, '4']], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3, 'xdva1']]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix = [[3, 9], [12, 15]]
>>> matrix_divided(matrix, -3)
[[-1.0, -3.0], [-4.0, -5.0]]
>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, 0.0]]
